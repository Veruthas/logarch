1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; #
3; # Description: utility functions
4; 
5; # void terminate(int errorCode, String prompt)
6; function terminate() {
7;     echo "ERROR: $2" >&2;
8;     exit $1;
9; }
10; 
11; # bool contains_item(String item, String[] list)
12; function contains_item() {
13;     local item=$1; shift;
14;     local -a list=("$@");
15;     
16;     for val in $list; do        
17;         [[ $item == $val ]] && return 0;            
18;     done
19;     return 1;
20; }
21; 
22; # (void|exit) confirm_empty(String message, String[] args_to_check)
23; function confirm_empty() {
24;     local message=$1; shift;
25;     
26;     if [[ -n "$@" ]]; then
27;         terminate 1 "$message'$@'";
28;     fi
29; }
30; 
31; # String ask(String message, String[] responses)
32; function ask() {
33;     local prompt=$1; shift;    
34;     local result;
35;     
36;     read -p "$prompt" result;
37;     
38;     local i=1;
39;     
40;     for response in $@; do        
41;         if [[ $response == $result ]]; then
42;             echo $result; 
43;             return;
44;         fi
45;     done
46;     
47;     echo noresult
48;     return 1;
49; }
50; 
51; # int log(int val)
52; function log() {
53;     
54;     local value=$1;
55;     local result=-1;
56;     
57;     while (( value > 0 )); do
58;         (( value /= 10 )); (( result++ ));
59;     done
60;     
61;     echo $result;
62; }
63; 
64; # HACK: Using eval for functional-style programming
65; 
66; # void process_file(String file, String command, String? init)
67; function process_file() {
68; 
69;     local file=$1;
70;     local command="$2";
71;     local init="$3";
72;     
73;     [[ ! -e $file ]] && terminate 1 "file not found: '$file'";
74;         
75;     
76;     [[ -n "$init" ]] && eval "$init";
77;     
78;     local line=;
79;     local index=0;    
80;         
81;     local contents="$(cat $file)";            
82;     
83;     while IFS= read -r line || [[ -n $line ]]; do
84;         
85;         eval "$command";
86;         
87;         (( index++ ));
88;         echo "$index; $line" >> test_data
89;     done <<< "$contents";        
90; }
91; 
92; # void clear_file(String file)
93; function clear_file() {
94;     > $1;
95; }
96; 
97; # int correct_index(int index, int max, int? min)
98; function correct_index() {
99;     local index=$1;
100;     local max=$2;
101;     local min=$3;
102;         
103;     [[ -z $min ]] && min=0;    
104;     (( index < 0 )) && index=$(( $max + $index + 1));
105;     (( index < 0 )) && index=$min;
106;     (( index > max )) && index=$max;
107;     
108;     echo $index;
109; }
110; 
111; # void num_file(String file, int from, int start, int end)
112; function num_file() {
113; 
114;     local file=$1; shift;
115;     local from=0;  [[ -n $1 ]] && from=$1; shift;
116;     local start=0; [[ -n $1 ]] && start=$1; shift;
117;     local end=-1;  [[ -n $1 ]] && end=$1; shift;   
118;     
119;     local init="local total=\$(wc -l < \$file); \
120;                 local width=\${#total}; \
121;                 local from=$from; \
122;                 local start=\$(correct_index $start \$total); \
123;                 local end=\$(correct_index $end \$total); \
124;                 local i=0;";
125;     
126;     local command='(( index >= start && index <= end )) && \
127;                    { i=$((index + from)); \
128;                      printf "%*s" $(( width - ${#i} )); \
129;                      printf "$i: %s\n" "$line"; }';
130;     
131;     process_file $file "$command" "$init"
132; }
133; 
134; # void list_file(String file, int start, int end)
135; function list_file() {
136;     local file=$1; shift;
137;     local start=0; [[ -n $1 ]] && start=$1; shift;
138;     local end=-1;  [[ -n $1 ]] && end=$1; shift;   
139;     
140;     local init="local total=\$(wc -l < \$file); \
141;                 local start=\$(correct_index $start \$total); \
142;                 local end=\$(correct_index $end \$total);";                
143;     
144;     local command='(( index >= start && index <= end )) && echo "$line";'
145;     
146;     process_file $file "$command" "$init"
147; }
1; #!/bin/bash
2; #
3; # Description: utility functions
4; 
5; # void terminate(int errorCode, String prompt)
6; function terminate() {
7;     echo "ERROR: $2" >&2;
8;     exit $1;
9; }
10; 
11; # bool contains_item(String item, String[] list)
12; function contains_item() {
13;     local item=$1; shift;
14;     local -a list=("$@");
15;     
16;     for val in $list; do        
17;         [[ $item == $val ]] && return 0;            
18;     done
19;     return 1;
20; }
21; 
22; # (void|exit) confirm_empty(String message, String[] args_to_check)
23; function confirm_empty() {
24;     local message=$1; shift;
25;     
26;     if [[ -n "$@" ]]; then
27;         terminate 1 "$message'$@'";
28;     fi
29; }
30; 
31; # String ask(String message, String[] responses)
32; function ask() {
33;     local prompt=$1; shift;    
34;     local result;
35;     
36;     read -p "$prompt" result;
37;     
38;     local i=1;
39;     
40;     for response in $@; do        
41;         if [[ $response == $result ]]; then
42;             echo $result; 
43;             return;
44;         fi
45;     done
46;     
47;     echo noresult
48;     return 1;
49; }
50; 
51; # int log(int val)
52; function log() {
53;     
54;     local value=$1;
55;     local result=-1;
56;     
57;     while (( value > 0 )); do
58;         (( value /= 10 )); (( result++ ));
59;     done
60;     
61;     echo $result;
62; }
63; 
64; # HACK: Using eval for functional-style programming
65; 
66; # void process_file(String file, String command, String? init)
67; function process_file() {
68; 
69;     local file=$1;
70;     local command="$2";
71;     local init="$3";
72;     
73;     [[ ! -e $file ]] && terminate 1 "file not found: '$file'";
74;         
75;     
76;     [[ -n "$init" ]] && eval "$init";
77;     
78;     local line=;
79;     local index=0;    
80;         
81;     local contents="$(cat $file)";            
82;     
83;     while IFS= read -r line || [[ -n $line ]]; do
84;         
85;         eval "$command";
86;         
87;         (( index++ ));
88;         echo "$index; $line" >> test_data
89;     done <<< "$contents";        
90; }
91; 
92; # void clear_file(String file)
93; function clear_file() {
94;     > $1;
95; }
96; 
97; # int correct_index(int index, int max, int? min)
98; function correct_index() {
99;     local index=$1;
100;     local max=$2;
101;     local min=$3;
102;         
103;     [[ -z $min ]] && min=0;    
104;     (( index < 0 )) && index=$(( $max + $index + 1));
105;     (( index < 0 )) && index=$min;
106;     (( index > max )) && index=$max;
107;     
108;     echo $index;
109; }
110; 
111; # void num_file(String file, int from, int start, int end)
112; function num_file() {
113; 
114;     local file=$1; shift;
115;     local from=0;  [[ -n $1 ]] && from=$1; shift;
116;     local start=0; [[ -n $1 ]] && start=$1; shift;
117;     local end=-1;  [[ -n $1 ]] && end=$1; shift;   
118;     
119;     local init="local total=\$(wc -l < \$file); \
120;                 local width=\${#total}; \
121;                 local from=$from; \
122;                 local start=\$(correct_index $start \$total); \
123;                 local end=\$(correct_index $end \$total); \
124;                 local i=0;";
125;     
126;     local command='(( index >= start && index <= end )) && \
127;                    { i=$((index + from)); \
128;                      printf "%*s" $(( width - ${#i} )); \
129;                      printf "$i: %s\n" "$line"; }';
130;     
131;     process_file $file "$command" "$init"
132; }
133; 
134; # void list_file(String file, int start, int end)
135; function list_file() {
136;     local file=$1; shift;
137;     local start=0; [[ -n $1 ]] && start=$1; shift;
138;     local end=-1;  [[ -n $1 ]] && end=$1; shift;   
139;     
140;     local init="local total=\$(wc -l < \$file); \
141;                 local start=\$(correct_index $start \$total); \
142;                 local end=\$(correct_index $end \$total);";                
143;     
144;     local command='(( index >= start && index <= end )) && echo "$line";'
145;     
146;     process_file $file "$command" "$init"
147; }
1; #!/bin/bash
2; #
3; # Description: utility functions
4; 
5; # void terminate(int errorCode, String prompt)
6; function terminate() {
7;     echo "ERROR: $2" >&2;
8;     exit $1;
9; }
10; 
11; # bool contains_item(String item, String[] list)
12; function contains_item() {
13;     local item=$1; shift;
14;     local -a list=("$@");
15;     
16;     for val in $list; do        
17;         [[ $item == $val ]] && return 0;            
18;     done
19;     return 1;
20; }
21; 
22; # (void|exit) confirm_empty(String message, String[] args_to_check)
23; function confirm_empty() {
24;     local message=$1; shift;
25;     
26;     if [[ -n "$@" ]]; then
27;         terminate 1 "$message'$@'";
28;     fi
29; }
30; 
31; # String ask(String message, String[] responses)
32; function ask() {
33;     local prompt=$1; shift;    
34;     local result;
35;     
36;     read -p "$prompt" result;
37;     
38;     local i=1;
39;     
40;     for response in $@; do        
41;         if [[ $response == $result ]]; then
42;             echo $result; 
43;             return;
44;         fi
45;     done
46;     
47;     echo noresult
48;     return 1;
49; }
50; 
51; # int log(int val)
52; function log() {
53;     
54;     local value=$1;
55;     local result=-1;
56;     
57;     while (( value > 0 )); do
58;         (( value /= 10 )); (( result++ ));
59;     done
60;     
61;     echo $result;
62; }
63; 
64; # HACK: Using eval for functional-style programming
65; 
66; 
67; # void process_file(String file, String command, String? init)
68; # defines: file, contents, line, index, command, init
69; function process_file() {
70; 
71;     local -r file=$1;
72;     local -r command="$2";
73;     local -r init="$3";
74;     
75;     [[ ! -e $file ]] && terminate 1 "file not found: '$file'";
76;         
77;     
78;     [[ -n "$init" ]] && eval "$init";
79;     
80;     local line=;
81;     local index=0;    
82;         
83;     local -r contents="$(cat $file)";            
84;     
85;     while IFS= read -r line || [[ -n $line ]]; do
86;         
87;         eval "$command";
88;         
89;         (( index++ ));
90;         echo "$index; $line" >> test_data
91;     done <<< "$contents";        
92; }
93; 
94; # int correct_index(int index, int max, int? min)
95; function correct_index() {
96;     local index=$1;
97;     local max=$2;
98;     local min=$3;
99;         
100;     [[ -z $min ]] && min=0;    
101;     (( index < 0 )) && index=$(( $max + $index + 1));
102;     (( index < 0 )) && index=$min;
103;     (( index > max )) && index=$max;
104;     
105;     echo $index;
106; }
107; 
108; # void num_file(String file, int from, int start, int end)
109; function num_file() {
110; 
111;     local file=$1; shift;
112;     local total=$(wc -l < $file);
113;     
114;     local from=0;  [[ -n $1 ]] && from=$1; shift;
115;     
116;     local start=0; [[ -n $1 ]] && start=$1; shift;    
117;           start=$(correct_index $start $total);
118;     
119;     local end=-1;  [[ -n $1 ]] && end=$1; shift;   
120;           end
121;     
122;     local init=" \
123;                 local width=\${#total}; \
124;                 local from=$from; \
125;                 local start=$start \
126;                 local end=$end \
127;                 local i=0;";
128;     
129;     local command='(( index >= start && index <= end )) && \
130;                    { i=$((index + from)); \
131;                      printf "%*s" $(( width - ${#i} )); \
132;                      printf "$i: %s\n" "$line"; }';
133;     
134;     process_file $file "$command" "$init"
135; }
136; 
137; # void list_file(String file, int start, int end)
138; function list_file() {
139;     local file=$1; shift;
140;     local start=0; [[ -n $1 ]] && start=$1; shift;
141;     local end=-1;  [[ -n $1 ]] && end=$1; shift;   
142;     
143;     local init="local total=\$(wc -l < \$file); \
144;                 local start=\$(correct_index $start \$total); \
145;                 local end=\$(correct_index $end \$total);";                
146;     
147;     local command='(( index >= start && index <= end )) && echo "$line";'
148;     
149;     process_file $file "$command" "$init"
150; }
151; 
152; # void clear_file(String file)
153; function clear_file() {
154;     > $1;
155; }
1; #!/bin/bash
2; #
3; # Description: utility functions
4; 
5; # void terminate(int errorCode, String prompt)
6; function terminate() {
7;     echo "ERROR: $2" >&2;
8;     exit $1;
9; }
10; 
11; # bool contains_item(String item, String[] list)
12; function contains_item() {
13;     local item=$1; shift;
14;     local -a list=("$@");
15;     
16;     for val in $list; do        
17;         [[ $item == $val ]] && return 0;            
18;     done
19;     return 1;
20; }
21; 
22; # (void|exit) confirm_empty(String message, String[] args_to_check)
23; function confirm_empty() {
24;     local message=$1; shift;
25;     
26;     if [[ -n "$@" ]]; then
27;         terminate 1 "$message'$@'";
28;     fi
29; }
30; 
31; # String ask(String message, String[] responses)
32; function ask() {
33;     local prompt=$1; shift;    
34;     local result;
35;     
36;     read -p "$prompt" result;
37;     
38;     local i=1;
39;     
40;     for response in $@; do        
41;         if [[ $response == $result ]]; then
42;             echo $result; 
43;             return;
44;         fi
45;     done
46;     
47;     echo noresult
48;     return 1;
49; }
50; 
51; # int log(int val)
52; function log() {
53;     
54;     local value=$1;
55;     local result=-1;
56;     
57;     while (( value > 0 )); do
58;         (( value /= 10 )); (( result++ ));
59;     done
60;     
61;     echo $result;
62; }
63; 
64; # HACK: Using eval for functional-style programming
65; 
66; 
67; # void process_file(String file, String command, String? init)
68; # defines: file, contents, line, index, command, init
69; function do_file() {
70; 
71;     local -r file=$1;
72;     local -r command="$2";
73;     local -r init="$3";
74;     
75;     [[ ! -e $file ]] && terminate 1 "file not found: '$file'";
76;         
77;     
78;     [[ -n "$init" ]] && eval "$init";
79;     
80;     local line=;
81;     local index=0;    
82;         
83;     local -r contents="$(cat $file)";            
84;     
85;     while IFS= read -r line || [[ -n $line ]]; do
86;         
87;         eval "$command";
88;         
89;         (( index++ ));
90;         echo "$index; $line" >> test_data
91;     done <<< "$contents";        
92; }
93; 
94; # void process_file(String file, int start, int end, String command, String? init)
95; # defines: total, start, end
96; function do_sub_file() {
97;     local file=$1; shift;
98;     
99;     [[ ! -e $file ]] && terminate 1 "file not found: '$file'";
100;     
101;     local total=$(wc -l < $file);
102;     
103;     local start=$( [[ -n "$1" ]] && echo "$1" || echo 0 ); shift;
104;           start=$(correct_index $start $total);
105;     
106;     local end=$( [[ -n "$1" ]] && echo "$1" || echo -1 ); shift;         
107;           end=$(correct_index $end $total);
108;     
109;     local command="$1"; shift;
110;     
111;     local init="$1";
112;     init+="\
113;            local start=$start; \
114;            local end=$end; \
115;            local total=$total";
116;            
117;     do_file $file "$command" "$init";
118; }
119; 
120; # int correct_index(int index, int max, int? min)
121; function correct_index() {
122;     local index=$1;
123;     local max=$2;
124;     local min=$3;
125;         
126;     [[ -z $min ]] && min=0;    
127;     (( index < 0 )) && index=$(( $max + $index + 1));
128;     (( index < 0 )) && index=$min;
129;     (( index > max )) && index=$max;
130;     
131;     echo $index;
132; }
133; 
134; # void num_file(String file, int from, int start, int end)
135; function num_file() {
136; 
137;     local file=$1;     
138;     local from=$([[ -n $2 ]] && echo "$2" || echo 0); 
139;     
140;     local start=$2;    
141;     local end=$1;
142;     
143;     local init="local width=\${#total}; \
144;                 local from=$from; \
145;                 local i=0;";
146;     
147;     local command='(( index >= start && index <= end )) && \
148;                    { i=$((index + from)); \
149;                      printf "%*s" $(( width - ${#i} )); \
150;                      printf "$i: %s\n" "$line"; }';
151;     
152;     do_sub_file $file $start $end "$command" "$init"
153; }
154; 
155; # void list_file(String file, int start, int end)
156; function list_file() {
157;     local file=$1; shift;
158;     local start=$2;
159;     local end=$3;
160;                    
161;     local command='(( index >= start && index <= end )) && echo "$line";'
162;     
163;     so_sub_file $file $start $end "$command";
164; }
165; 
166; # void clear_file(String file)
167; function clear_file() {
168;     > $1;
169; }
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; #!/bin/bash
2; 
3; source util.sh
4; 
5; declare command=$1; shift
6; $command "$@";
1; Looking started he up perhaps against
2; How remainder all additions get elsewhere resources
3; One missed shy wishes supply design answer formed
4; Prevent on present hastily passage an subject in be
5; Be happiness arranging so newspaper defective affection ye
6; Families blessing he in to no daughter
7; 
8; 
9; Consulted he eagerness unfeeling deficient existence of
10; Calling nothing end fertile for venture way boy
11; Esteem spirit temper too say adieus who direct esteem
12; It esteems luckily mr or picture placing drawing no
13; Apartments frequently or motionless on reasonable projecting expression
14; Way mrs end gave tall walk fact bed
15; 
16; 
17; Performed suspicion in certainty so frankness by attention pretended
18; Newspaper or in tolerably education enjoyment
19; Extremity excellent certainty discourse sincerity no he so resembled
20; Joy house worse arise total boy but
21; Elderly up chicken do at feeling is
22; Like seen drew no make fond at on rent
23; Behaviour extremely her explained situation yet september gentleman are who
24; Is thought or pointed hearing he
25; 
26; 
27; Affronting discretion as do is announcing
28; Now months esteem oppose nearer enable too six
29; She numerous unlocked you perceive speedily
30; Affixed offence spirits or ye of offices between
31; Real on shot it were four an as
32; Absolute bachelor rendered six nay you juvenile
33; Vanity entire an chatty to
34; 
35; 
36; In on announcing if of comparison pianoforte projection
37; Maids hoped gay yet bed asked blind dried point
38; On abroad danger likely regret twenty edward do
39; Too horrible consider followed may differed age
40; An rest if more five mr of
41; Age just her rank met down way
42; Attended required so in cheerful an
43; Domestic replying she resolved him for did
44; Rather in lasted no within no
45; 
46; 
47; Same an quit most an
48; Admitting an mr disposing sportsmen
49; Tried on cause no spoil arise plate
50; Longer ladies valley get esteem use led six
51; Middletons resolution advantages expression themselves partiality so me at
52; West none hope if sing oh sent tell is
53; 
54; 
55; Sociable on as carriage my position weddings raillery consider
56; Peculiar trifling absolute and wandered vicinity property yet
57; The and collecting motionless difficulty son
58; His hearing staying ten colonel met
59; Sex drew six easy four dear cold deny
60; Moderate children at of outweigh it
61; Unsatiable it considered invitation he travelling insensible
62; Consulted admitting oh mr up as described acuteness propriety moonlight
63; 
64; 
65; Sportsman do offending supported extremity breakfast by listening
66; Decisively advantages nor expression unpleasing she led met
67; Estate was tended ten boy nearer seemed
68; As so seeing latter he should thirty whence
69; Steepest speaking up attended it as
70; Made neat an on be gave show snug tore
71; 
72; 
73; Suppose end get boy warrant general natural
74; Delightful met sufficient projection ask
75; Decisively everything principles if preference do impression of
76; Preserved oh so difficult repulsive on in household
77; In what do miss time be
78; Valley as be appear cannot so by
79; Convinced resembled dependent remainder led zealously his shy own belonging
80; Always length letter adieus add number moment she
81; Promise few compass six several old offices removal parties fat
82; Concluded rapturous it intention perfectly daughters is as
83; 
84; 
85; Perceived end knowledge certainly day sweetness why cordially
86; Ask quick six seven offer see among
87; Handsome met debating sir dwelling age material
88; As style lived he worse dried
89; Offered related so visitor we private removed
90; Moderate do subjects to distance
91; 
92; 
93; Looking started he up perhaps against
94; How remainder all additions get elsewhere resources
95; One missed shy wishes supply design answer formed
96; Prevent on present hastily passage an subject in be
97; Be happiness arranging so newspaper defective affection ye
98; Families blessing he in to no daughter
99; 
100; 
101; Consulted he eagerness unfeeling deficient existence of
102; Calling nothing end fertile for venture way boy
103; Esteem spirit temper too say adieus who direct esteem
104; It esteems luckily mr or picture placing drawing no
105; Apartments frequently or motionless on reasonable projecting expression
106; Way mrs end gave tall walk fact bed
107; 
108; 
109; Performed suspicion in certainty so frankness by attention pretended
110; Newspaper or in tolerably education enjoyment
111; Extremity excellent certainty discourse sincerity no he so resembled
112; Joy house worse arise total boy but
113; Elderly up chicken do at feeling is
114; Like seen drew no make fond at on rent
115; Behaviour extremely her explained situation yet september gentleman are who
116; Is thought or pointed hearing he
117; 
118; 
119; Affronting discretion as do is announcing
120; Now months esteem oppose nearer enable too six
121; She numerous unlocked you perceive speedily
122; Affixed offence spirits or ye of offices between
123; Real on shot it were four an as
124; Absolute bachelor rendered six nay you juvenile
125; Vanity entire an chatty to
126; 
127; 
128; In on announcing if of comparison pianoforte projection
129; Maids hoped gay yet bed asked blind dried point
130; On abroad danger likely regret twenty edward do
131; Too horrible consider followed may differed age
132; An rest if more five mr of
133; Age just her rank met down way
134; Attended required so in cheerful an
135; Domestic replying she resolved him for did
136; Rather in lasted no within no
137; 
138; 
139; Same an quit most an
140; Admitting an mr disposing sportsmen
141; Tried on cause no spoil arise plate
142; Longer ladies valley get esteem use led six
143; Middletons resolution advantages expression themselves partiality so me at
144; West none hope if sing oh sent tell is
145; 
146; 
147; Sociable on as carriage my position weddings raillery consider
148; Peculiar trifling absolute and wandered vicinity property yet
149; The and collecting motionless difficulty son
150; His hearing staying ten colonel met
151; Sex drew six easy four dear cold deny
152; Moderate children at of outweigh it
153; Unsatiable it considered invitation he travelling insensible
154; Consulted admitting oh mr up as described acuteness propriety moonlight
155; 
156; 
157; Sportsman do offending supported extremity breakfast by listening
158; Decisively advantages nor expression unpleasing she led met
159; Estate was tended ten boy nearer seemed
160; As so seeing latter he should thirty whence
161; Steepest speaking up attended it as
162; Made neat an on be gave show snug tore
163; 
164; 
165; Suppose end get boy warrant general natural
166; Delightful met sufficient projection ask
167; Decisively everything principles if preference do impression of
168; Preserved oh so difficult repulsive on in household
169; In what do miss time be
170; Valley as be appear cannot so by
171; Convinced resembled dependent remainder led zealously his shy own belonging
172; Always length letter adieus add number moment she
173; Promise few compass six several old offices removal parties fat
174; Concluded rapturous it intention perfectly daughters is as
175; 
176; 
177; Perceived end knowledge certainly day sweetness why cordially
178; Ask quick six seven offer see among
179; Handsome met debating sir dwelling age material
180; As style lived he worse dried
181; Offered related so visitor we private removed
182; Moderate do subjects to distance
183; 
184; 
185; Open know age use whom him than lady was
186; On lasted uneasy exeter my itself effect spirit
187; At design he vanity at cousin longer looked ye
188; Design praise me father an favour
189; As greatly replied it windows of an minuter behaved passage
190; Diminution expression reasonable it we he projection acceptance in devonshire
191; Perpetual it described at he applauded
192; 
193; 
194; It prepare is ye nothing blushes up brought
195; Or as gravity pasture limited evening on
196; Wicket around beauty say she
197; Frankness resembled say not new smallness you discovery
198; Noisier ferrars yet shyness weather ten colonel
199; Too him himself engaged husband pursuit musical
200; Man age but him determine consisted therefore
201; Dinner to beyond regret wished an branch he
202; Remain bed but expect suffer little repair
203; 
204; 
205; She who arrival end how fertile enabled
206; Brother she add yet see minuter natural smiling article painted
207; Themselves at dispatched interested insensible am be prosperous reasonably it
208; In either so spring wished
209; Melancholy way she boisterous use friendship she dissimilar considered expression
210; Sex quick arose mrs lived
211; Mr things do plenty others an vanity myself waited to
212; Always parish tastes at as mr father dining at
213; 
214; 
215; Certainty listening no no behaviour existence assurance situation is
216; Because add why not esteems amiable him
217; Interested the unaffected mrs law friendship add principles
218; Indeed on people do merits to
219; Court heard which up above hoped grave do
220; Answer living law things either sir bed length
221; Looked before we an on merely
222; These no death he at share alone
223; Yet outward the him compass hearted are tedious
224; 
225; 
226; Its sometimes her behaviour are contented
227; Do listening am eagerness oh objection collected
228; Together gay feelings continue juvenile had off one
229; Unknown may service subject her letters one bed
230; Child years noise ye in forty
231; Loud in this in both hold
232; My entrance me is disposal bachelor remember relation
233; 
234; 
235; Sex and neglected principle ask rapturous consulted
236; Object remark lively all did feebly excuse our wooded
237; Old her object chatty regard vulgar missed
238; Speaking throwing breeding betrayed children my to
239; Me marianne no he horrible produced ye
240; Sufficient unpleasing an insensible motionless if introduced ye
241; Now give nor both come near many late
242; 
243; 
244; Husbands ask repeated resolved but laughter debating
245; She end cordial visitor noisier fat subject general picture
246; Or if offering confined entrance no
247; Nay rapturous him see something residence
248; Highly talked do so vulgar
249; Her use behaved spirits and natural attempt say feeling
250; Exquisite mr incommode immediate he something ourselves it of
251; Law conduct yet chiefly beloved examine village proceed
252; 
253; 
254; In friendship diminution instrument so
255; Son sure paid door with say them
256; Two among sir sorry men court
257; Estimable ye situation suspicion he delighted an happiness discovery
258; Fact are size cold why had part
259; If believing or sweetness otherwise in we forfeited
260; Tolerably an unwilling arranging of determine
261; Beyond rather sooner so if up wishes or
262; 
263; 
264; Picture removal detract earnest is by
265; Esteems met joy attempt way clothes yet demesne tedious
266; Replying an marianne do it an entrance advanced
267; Two dare say play when hold
268; Required bringing me material stanhill jointure is as he
269; Mutual indeed yet her living result matter him bed whence
270; 
271; 
272; He do subjects prepared bachelor juvenile ye oh
273; He feelings removing informed he as ignorant we prepared
274; Evening do forming observe spirits is in
275; Country hearted be of justice sending
276; On so they as with room cold ye
277; Be call four my went mean
278; Celebrated if remarkably especially an
279; Going eat set she books found met aware
1; 1
2; 2
3; 3
4; 4
5; 5
6; 6
7; 7
8; 8
9; 9
10; 10
11; 11
12; 12
13; 13
14; 14
15; 15
16; 16
17; 17
18; 18
19; 19
20; 20
1; 1
2; 2
3; 3
4; 4
5; 5
6; 6
7; 7
8; 8
9; 9
10; 10
11; 11
12; 12
13; 13
14; 14
15; 15
16; 16
17; 17
18; 18
19; 19
20; 20
1; 1
2; 2
3; 3
4; 4
5; 5
6; 6
7; 7
8; 8
9; 9
10; 10
11; 11
12; 12
13; 13
14; 14
15; 15
16; 16
17; 17
18; 18
19; 19
20; 20
1; 1
2; 2
3; 3
4; 4
5; 5
6; 6
7; 7
8; 8
9; 9
10; 10
11; 11
12; 12
13; 13
14; 14
15; 15
16; 16
17; 17
18; 18
19; 19
20; 20
1; 1
2; 2
3; 3
4; 4
5; 5
6; 6
7; 7
8; 8
9; 9
10; 10
11; 11
12; 12
13; 13
14; 14
15; 15
16; 16
17; 17
18; 18
19; 19
20; 20
1; 20
2; 1
3; 2
4; 3
5; 4
6; 5
7; 6
8; 7
9; 8
10; 9
1; 1
2; 2
3; 3
4; 4
5; 5
6; 6
7; 7
8; 8
9; 9
1; 9
1; 1
2; 2
3; 3
4; 4
5; 5
6; 6
7; 7
8; 8
9; 9
1; 1
2; 2
3; 4
4; 5
5; 6
6; 7
7; 8
8; 9
1; 1
2; 2
3; 5
4; 6
5; 7
6; 8
7; 9
1; 5
2; 6
3; 7
4; 8
5; 9
1; 5
2; 6
3; 7
1; 5
1; 5
1; 1
2; 2
3; 3
4; 4
5; 5
6; 6
7; 7
8; 8
9; 9
1; 1
2; 2
3; 3
4; 4
5; 5
6; 6
7; 7
8; 8
9; 9
1; 1
2; 2
3; 3
4; 4
5; 5
6; 6
7; 7
8; 8
9; 9
1; 1
2; 2
3; 3
4; 4
5; 5
6; 6
7; 7
8; 8
9; 9
1; 1
2; 2
3; 3
4; 4
5; 5
6; 6
7; 7
8; 8
9; 9
1; 1
2; 2
3; 3
4; 4
5; 5
6; 6
7; 7
8; 8
9; 9
1; A
2; B
3; C
4; D
5; E
6; F
7; G
8; H
9; I
10; J
11; K
12; L
13; M
14; N
15; O
1; A
2; B
3; C
4; D
5; E
6; F
7; G
8; H
9; I
10; J
11; K
12; L
13; M
14; N
15; O
1; A
2; B
3; C
4; D
5; E
6; F
7; G
8; H
9; I
10; J
11; K
12; L
13; M
14; N
15; O
1; A
2; B
3; C
4; D
5; E
6; F
7; G
8; H
9; I
10; J
11; K
12; L
13; M
14; N
15; O
1; A
2; C
3; D
4; E
5; F
6; G
7; H
8; I
9; J
10; K
11; L
12; M
13; N
14; O
1; E
2; F
3; G
4; H
5; I
6; J
7; K
8; L
9; M
10; N
11; O
1; E
2; F
3; G
4; H
5; I
6; J
7; K
8; L
9; M
10; N
11; O
1; z
2; y
3; x
4; w
5; v
6; A
7; B
8; C
9; D
10; E
11; F
12; G
13; H
14; I
15; J
16; K
17; L
18; M
19; N
20; O
21; rasd
22; 224s
23; sasa
1; z
2; y
3; x
4; w
5; v
6; A
7; B
8; C
9; D
10; E
11; F
12; G
13; H
14; I
15; J
16; K
17; L
18; M
19; N
20; O
21; rasd
22; 224s
23; sasa
1; z
2; y
3; x
4; w
5; v
6; A
7; B
8; C
9; D
10; E
11; F
12; G
13; H
14; I
15; J
16; K
17; L
18; M
19; N
20; O
21; rasd
22; 224s
23; sasa
1; z
2; y
3; x
4; w
5; v
6; A
7; B
8; C
9; D
10; E
11; F
12; G
13; H
14; I
15; J
16; K
17; L
18; M
19; N
20; O
21; rasd
22; 224s
23; sasa
1; z
2; y
3; x
4; w
5; v
6; A
7; B
8; C
9; D
10; E
11; F
12; G
13; H
14; I
15; J
16; K
17; L
18; M
19; N
20; O
21; rasd
22; 224s
23; sasa
1; z
2; y
3; x
4; w
5; v
6; A
7; B
8; C
9; D
10; E
11; F
12; G
13; H
14; I
15; J
16; K
17; L
18; M
19; N
20; O
21; rasd
22; 224s
23; sasa
1; z
2; y
3; x
4; w
5; v
6; A
7; B
8; C
9; D
10; E
11; F
12; G
13; H
14; I
15; J
16; K
17; L
18; M
19; N
20; O
21; rasd
22; 224s
23; sasa
1; z
2; y
3; x
4; w
5; v
6; A
7; B
8; C
9; D
10; E
11; F
12; G
13; H
14; I
15; J
16; K
17; L
18; M
19; N
20; O
21; rasd
22; 224s
23; sasa
1; z
2; y
3; x
4; w
5; v
6; A
7; B
8; C
9; D
10; E
11; F
12; G
13; H
14; I
15; J
16; K
17; L
18; M
19; N
20; O
21; rasd
22; 224s
23; sasa
1; z
2; y
3; x
4; w
5; v
6; A
7; B
8; C
9; D
10; E
11; F
12; G
13; H
14; I
15; J
16; K
17; L
18; M
19; N
20; O
21; rasd
22; 224s
23; sasaz
1; z
2; y
3; x
4; w
5; v
6; A
7; B
8; C
9; D
10; E
11; F
12; G
13; H
14; I
15; J
16; K
17; L
18; M
19; N
20; O
21; rasd
22; 224s
23; sasaz
1; z
2; y
3; x
4; w
5; v
6; A
7; B
8; C
9; D
10; E
11; F
12; G
13; H
14; I
15; J
16; K
17; L
18; M
19; N
20; O
21; rasd
22; 224s
23; sasaz
1; z
2; y
3; x
4; w
5; v
6; A
7; B
8; C
9; D
10; E
11; F
12; G
13; H
14; I
15; J
16; K
17; L
18; M
19; N
20; O
21; rasd
22; 224s
23; sasaz
1; z
2; y
3; x
4; w
5; v
6; A
7; B
8; C
9; D
10; E
11; F
12; G
13; H
14; I
15; J
16; K
17; L
18; M
19; N
20; O
21; rasd
22; 224s
23; sasaz
1; z
2; y
3; hello
4; world
5; my
6; x
7; w
8; v
9; A
10; B
11; C
12; D
13; E
14; F
15; G
16; H
17; I
18; J
19; K
20; L
21; M
22; N
23; O
24; rasd
25; 224s
26; sasaz
1; z
2; y
3; x
4; w
5; v
6; A
7; B
8; C
9; D
10; E
11; F
12; G
13; H
14; I
15; J
16; K
17; L
18; M
19; N
20; O
21; rasd
22; 224s
23; sasaz
1; z
2; y
3; x
4; w
5; v
6; A
7; B
8; C
9; D
10; E
11; F
12; G
13; H
14; I
15; J
16; K
17; L
18; M
19; N
20; O
21; rasd
22; 224s
23; sasaz
1; z
2; y
3; x
4; w
5; v
6; A
7; B
8; C
9; D
10; E
11; F
12; G
13; H
14; I
15; J
16; K
17; L
18; M
19; N
20; O
21; rasd
22; 224s
23; sasaz
1; z
2; y
3; x
4; w
5; v
6; A
7; B
8; C
9; D
10; E
11; F
12; G
13; H
14; I
15; J
16; K
17; L
18; M
19; N
20; O
21; rasd
22; 224s
23; sasaz
1; hello world
2; my name is
3; levi the man
4; z
5; y
6; x
7; w
8; v
9; A
10; B
11; C
12; D
13; E
14; F
15; G
16; H
17; I
18; J
19; K
20; L
21; M
22; N
23; O
24; rasd
25; 224s
26; sasaz
1; z
2; y
3; x
4; w
5; v
6; A
7; B
8; C
9; D
10; E
11; F
12; G
13; H
14; I
15; J
16; K
17; L
18; M
19; N
20; O
21; rasd
22; 224s
23; sasaz
1; z
2; y
3; x
4; w
5; v
6; A
7; B
8; C
9; D
10; E
11; F
12; G
13; H
14; I
15; J
16; K
17; L
18; M
19; N
20; O
1; z
2; y
3; x
4; w
5; v
6; A
7; B
8; C
9; D
10; E
11; F
12; G
13; H
14; I
15; J
16; K
17; L
18; M
19; N
20; O
1; z
2; y
3; x
4; w
5; v
6; A
7; B
8; C
9; D
10; E
11; F
12; G
13; H
14; I
15; J
16; K
17; L
18; M
19; N
20; O
1; z
2; y
3; x
4; w
5; v
6; A
7; B
8; C
9; D
10; E
11; F
12; G
13; H
14; I
15; J
16; K
17; L
18; M
19; N
20; O
1; z
2; y
3; x
4; w
5; v
6; A
7; B
8; C
9; D
10; E
11; F
12; G
13; H
14; I
15; J
16; K
17; L
18; M
19; N
20; O
1; z
2; y
3; x
4; w
5; v
6; A
7; B
8; C
9; D
10; E
11; F
12; G
13; H
14; I
15; J
16; K
17; L
18; M
19; N
20; O
1; z
2; y
3; x
4; w
5; v
6; A
7; B
8; C
9; D
10; E
11; F
12; G
13; H
14; I
15; J
16; K
17; L
18; M
19; N
20; O
1; z
2; y
3; x
4; w
5; v
6; A
7; B
8; C
9; D
10; E
11; F
12; G
13; H
14; I
15; J
16; K
17; L
18; M
19; N
20; O
1; abcdefghijklmnopqrstuvwxyz
2; helloworld
3; 1234567890123456789
1; abcdefghijklmnopqrstuvwxyz
2; helloworld
3; 1234567890123456789
1; abcdefghijklmnopqrstuvwxyz
2; helloworld
3; 01234567890123456790
1; abcdefghijklmnopqrstuvwxyz
2; helloworld
3; 01234567890123456790
1; helloworld
2; abcdefghijklmnopqrstuvwxyz
3; 01234567890123456790
1; abcdefghijklmnopqrstuvwxyz
2; 01234567890123456790
3; helloworld
1; abcdefghijklmnopqrstuvwxyz
2; 01234567890123456790
3; helloworld
1; 0123456789
1; ABC0123456789
1; ABC0123456789
1; ABC0123456789
1; 0123456789
1; 
1; 
1; ABC
1; ABCABC
1; XYZABCABC
1; 
1; ABC
1; ABCABC
1; 
1; 
1; ABC
1; ABCABC
1; ABCABXYZABCABC
1; 
1; ABC
1; ABCABC
1; 
1; ABC
1; ABCABC
1; 
1; ABC
1; ABCABC
1; ABCABCXYZ
1; ABCABCXYZXYZ
